/*
 * This file is generated by jOOQ.
 */
package lv.bogatirjovs.currencycalculatorkotlin.jooq.tables.pojos


import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.GeneratedValue
import jakarta.persistence.GenerationType
import jakarta.persistence.Id
import jakarta.persistence.Table
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import java.io.Serializable
import java.math.BigDecimal
import java.time.LocalDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Entity
@Table(
    name = "currency_conversion",
    schema = "currency"
)
data class CurrencyConversion(
    @get:Id
    @get:GeneratedValue(strategy = GenerationType.IDENTITY)
    @get:Column(name = "id", nullable = false)
    var id: Long? = null,
    @get:Column(name = "amount", nullable = false, precision = 19, scale = 4)
    @get:NotNull
    var amount: BigDecimal? = null,
    @get:Column(name = "from_currency", nullable = false, length = 3)
    @get:NotNull
    @get:Size(max = 3)
    var fromCurrency: String? = null,
    @get:Column(name = "to_currency", nullable = false, length = 3)
    @get:NotNull
    @get:Size(max = 3)
    var toCurrency: String? = null,
    @get:Column(name = "fee", nullable = false, precision = 5, scale = 4)
    @get:NotNull
    var fee: BigDecimal? = null,
    @get:Column(name = "status", nullable = false, length = 20)
    @get:NotNull
    @get:Size(max = 20)
    var status: String? = null,
    @get:Column(name = "conversion_rate", precision = 19, scale = 6)
    var conversionRate: BigDecimal? = null,
    @get:Column(name = "result", precision = 19, scale = 6)
    var result: BigDecimal? = null,
    @get:Column(name = "created_at", nullable = false, precision = 6)
    var createdAt: LocalDateTime? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: CurrencyConversion = other as CurrencyConversion
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.amount == null) {
            if (o.amount != null)
                return false
        }
        else if (this.amount != o.amount)
            return false
        if (this.fromCurrency == null) {
            if (o.fromCurrency != null)
                return false
        }
        else if (this.fromCurrency != o.fromCurrency)
            return false
        if (this.toCurrency == null) {
            if (o.toCurrency != null)
                return false
        }
        else if (this.toCurrency != o.toCurrency)
            return false
        if (this.fee == null) {
            if (o.fee != null)
                return false
        }
        else if (this.fee != o.fee)
            return false
        if (this.status == null) {
            if (o.status != null)
                return false
        }
        else if (this.status != o.status)
            return false
        if (this.conversionRate == null) {
            if (o.conversionRate != null)
                return false
        }
        else if (this.conversionRate != o.conversionRate)
            return false
        if (this.result == null) {
            if (o.result != null)
                return false
        }
        else if (this.result != o.result)
            return false
        if (this.createdAt == null) {
            if (o.createdAt != null)
                return false
        }
        else if (this.createdAt != o.createdAt)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.amount == null) 0 else this.amount.hashCode())
        result = prime * result + (if (this.fromCurrency == null) 0 else this.fromCurrency.hashCode())
        result = prime * result + (if (this.toCurrency == null) 0 else this.toCurrency.hashCode())
        result = prime * result + (if (this.fee == null) 0 else this.fee.hashCode())
        result = prime * result + (if (this.status == null) 0 else this.status.hashCode())
        result = prime * result + (if (this.conversionRate == null) 0 else this.conversionRate.hashCode())
        result = prime * result + (if (this.result == null) 0 else this.result.hashCode())
        result = prime * result + (if (this.createdAt == null) 0 else this.createdAt.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("CurrencyConversion (")

        sb.append(id)
        sb.append(", ").append(amount)
        sb.append(", ").append(fromCurrency)
        sb.append(", ").append(toCurrency)
        sb.append(", ").append(fee)
        sb.append(", ").append(status)
        sb.append(", ").append(conversionRate)
        sb.append(", ").append(result)
        sb.append(", ").append(createdAt)

        sb.append(")")
        return sb.toString()
    }
}
